
<#
    Created By: Christopher Sprague
    Purpose: To check if a file exists in a remote session and if not then copy a file from a shared file to the remote session
    Date Origionally Created: 11/20/2023
    Current Version Date: 11/20/2023
    Current Version 1.0
    *Major Features
        *Sub-Features
    --------------------------------------
    Prep-PowerADDeploy (1.0)
        
#>


function Prep-PowerADDeploy {
    [CmdletBinding()]
    param (
        [parameter(ValueFromPipeline)]
        [string[]]$FilePaths = ‘C:\ADBuild_PS.csv’,

        [parameter(Mandatory)]
        [string[]]$FileToCopy = '\\ADVSCR-FS1\ActiveDirectory\ADBuild_PS.csv',

        [parameter(Mandatory,ValueFromPipeline)]
        [string[]]$ComputerName,

        [parameter(Mandatory)]
        [pscredential]$Credential
    )

    Process {
        foreach ($Computer in $ComputerName) {
            try {
                $Session = New-PSSession -ComputerName $Computer -Credential $Credential -ErrorAction Stop
            } catch {
                Write-Error "Error connecting to $Computer. Details: $($_.Exception.Message)"
                continuea
            }

            foreach ($FilePath in $FilePaths) {
                $FileScriptBlock = {
                    param($FilePath)
                    try {
                        if (Test-Path -Path $FilePath -PathType Leaf) {
                            Write-Output "The file $FilePath exists on $env:COMPUTERNAME."
                        } else {
                            Write-Output "The file $FilePath does not exist on $env:COMPUTERNAME. Creating it..."
                        }
                    } catch {
                        Write-Error "Error checking $Computer. Details: $($_.Exception.Message)"
                        return
                    }
                } 

                try {
                    Invoke-Command -Session $Session -ScriptBlock $FileScriptBlock -ArgumentList $FilePath
                } catch {
                    Write-Error "Failed to execute command on remote computer: $_"
                }
            }

            Copy-Item -Path $FileToCopy -ToSession $Session -Destination $FilePath -Force
        }
    }
}
